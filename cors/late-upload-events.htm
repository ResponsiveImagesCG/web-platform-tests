<!DOCTYPE html>
<meta charset=utf-8>
<title>Adding upload event listeners after send()</title>
<script src=/resources/testharness.js></script>
<script src=/resources/testharnessreport.js></script>
<script src=support.js?pipe=sub></script>

<h1>Adding upload event listeners after send()</h1>

<div id=log></div>

<script>
var eventCounter = 0;
function doTest(desc, headers, expectEvents){
    async_test("Late listeners: "+desc).step(function() {
        var client = new XMLHttpRequest();
        console.log( CROSSDOMAIN + "resources/status.py?headers=custom-header");
        client.open("POST", CROSSDOMAIN + "resources/status.py?headers=custom-header");

        for(var name in headers){ console.log(name+': '+headers[name])
            client.setRequestHeader(name, headers[name]);
        }

        client.onreadystatechange = this.step_func(function(e) { console.log('readyState '+client.readyState)
            // Irrelevant if request is not finished
            if (client.readyState < 4) return;
            assert_equals(client.status, 200);
            if(expectEvents){
                assert_true(eventCounter>0, 'Events did fire');
            }else{
                assert_equals(eventCounter, 0, 'No events did fire');
            }
            this.done();
        });
        client.send((new Array(1000)).join('a'));
        client.upload.onprogress = client.upload.onloadend = client.upload.onloadstart = client.upload.onload = this.step_func(function(e){
            eventCounter ++;
            if(!expectEvents){
                assert_unreached("Apparently, these events should not fire, because there was no preflight for this request. This failure might cause cross-origin information to leak - security implications should be investigated.");
            }
        });
    });
}

doTest("No preflight", {}, false);
doTest("Preflight", {"custom-header":"test"}, true);
</script>
